"RunResult {\n  env: <ref *1> FullEnvironment {\n    _events: [Object: null prototype] {\n      error: [AsyncFunction (anonymous)],\n      'generator:reject': [Function (anonymous)],\n      'generator:resolve': [Function (anonymous)]\n    },\n    _eventsCount: 3,\n    _maxListeners: 100,\n    cwd: '/private/var/folders/50/ktqwyw4s2f9_2sln4gvh7d5c0000gn/T/28419000a153d94a1022b9d83bb7be3ee7215e88',\n    logCwd: '/private/var/folders/50/ktqwyw4s2f9_2sln4gvh7d5c0000gn/T/28419000a153d94a1022b9d83bb7be3ee7215e88',\n    adapter: TestAdapter {\n      promptModule: [Function],\n      diff: [Function (anonymous)],\n      log: [Function],\n      registerDummyPrompt: [Function (anonymous)],\n      spyFactory: [Function: spyFactory]\n    },\n    sharedFs: Store {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: 0,\n      loadFile: [Function: loadFile],\n      store: [Map],\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false\n    },\n    conflicterOptions: {\n      force: true,\n      cwd: '/private/var/folders/50/ktqwyw4s2f9_2sln4gvh7d5c0000gn/T/28419000a153d94a1022b9d83bb7be3ee7215e88'\n    },\n    options: {\n      newErrorHandler: true,\n      force: true,\n      skipCache: true,\n      skipInstall: true\n    },\n    aliases: [ [Object] ],\n    store: Store {\n      env: [Circular *1],\n      _meta: [Object],\n      _packagesPaths: {},\n      _packagesNS: [Array]\n    },\n    command: undefined,\n    runLoop: Queue {\n      queueNames: [Array],\n      __queues__: [Object],\n      runOnAdd: false,\n      _maxListeners: 0,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      running: false\n    },\n    composedStore: ComposedStore {\n      log: [Function],\n      generators: [Object],\n      uniqueByPathMap: [Map],\n      uniqueGloballyMap: Map(0) {}\n    },\n    lookups: [ '.', 'generators', 'lib/generators', 'dist/generators' ],\n    sharedOptions: {\n      localConfigOnly: true,\n      sharedData: {},\n      forwardErrorToEnvironment: false,\n      skipInstall: true,\n      skipCache: true,\n      skipLocalCache: true\n    },\n    repository: FlyRepository {\n      arboristConfig: [Object],\n      _arborist: undefined,\n      _repositoryPath: '/private/var/folders/50/ktqwyw4s2f9_2sln4gvh7d5c0000gn/T/28419000a153d94a1022b9d83bb7be3ee7215e88/.yo-repository',\n      nodeModulesPath: '/private/var/folders/50/ktqwyw4s2f9_2sln4gvh7d5c0000gn/T/28419000a153d94a1022b9d83bb7be3ee7215e88/.yo-repository/node_modules',\n      _require: undefined\n    },\n    experimental: false,\n    _rootGenerator: G {\n      _events: [Object: null prototype] {},\n      _eventsCount: 0,\n      _maxListeners: undefined,\n      options: [Object],\n      _initOptions: [Object],\n      _args: [],\n      _options: [Object],\n      _arguments: [Array],\n      _prompts: [],\n      _namespace: 'norgate-av:app',\n      _namespaceId: [YeomanNamespace],\n      _customPriorities: undefined,\n      resolved: '/Users/damienbutt/Projects/generator-norgate-av/generators/app/index.js',\n      description: 'Generates project boilerplates of various types ready for development.',\n      contextRoot: '/private/var/folders/50/ktqwyw4s2f9_2sln4gvh7d5c0000gn/T/28419000a153d94a1022b9d83bb7be3ee7215e88',\n      _debug: [Function],\n      env: [Circular *1],\n      fs: [MemFsEditor],\n      log: [Function],\n      _: [Object: null prototype] [Module],\n      appname: 'Norgate AV Project Generator',\n      args: [],\n      arguments: [],\n      _destinationRoot: '/private/var/folders/50/ktqwyw4s2f9_2sln4gvh7d5c0000gn/T/28419000a153d94a1022b9d83bb7be3ee7215e88/generator-temp',\n      _sourceRoot: '/Users/damienbutt/Projects/generator-norgate-av/generators/app/templates',\n      generatorConfig: [Storage],\n      instanceConfig: undefined,\n      _config: undefined,\n      _packageJson: undefined,\n      _globalConfig: [Storage],\n      _running: true,\n      features: [Object],\n      yoGeneratorVersion: '7.1.1',\n      _simpleGit: undefined,\n      _queues: [Object],\n      generator: [t],\n      choices: [Array],\n      abort: true,\n      _meta: [Object],\n      _environmentOptions: [Object],\n      _taskStatus: [Object],\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false\n    },\n    compatibilityMode: false,\n    [Symbol(shapeMode)]: false,\n    [Symbol(kCapture)]: false\n  },\n  generator: <ref *2> G {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    options: {\n      localConfigOnly: true,\n      sharedData: {},\n      forwardErrorToEnvironment: false,\n      skipInstall: true,\n      skipCache: true,\n      skipLocalCache: true,\n      force: true,\n      resolved: '/Users/damienbutt/Projects/generator-norgate-av/generators/app/index.js',\n      namespace: 'norgate-av:app',\n      _: [],\n      'skip-cache': false,\n      'skip-install': false,\n      'force-install': false,\n      'ask-answered': false,\n      description: 'A Generator for testing purposes',\n      d: '',\n      skipPrompts: false,\n      type: 'typescript',\n      node: [k],\n      name: 'generator-temp',\n      git: false,\n      pkg: 'pnpm',\n      displayName: 'generator-temp'\n    },\n    _initOptions: {\n      localConfigOnly: true,\n      sharedData: {},\n      forwardErrorToEnvironment: false,\n      skipInstall: true,\n      skipCache: true,\n      skipLocalCache: true,\n      force: true,\n      env: [FullEnvironment],\n      resolved: '/Users/damienbutt/Projects/generator-norgate-av/generators/app/index.js',\n      namespace: 'norgate-av:app'\n    },\n    _args: [],\n    _options: {\n      help: [Object],\n      'skip-cache': [Object],\n      'skip-install': [Object],\n      'force-install': [Object],\n      'ask-answered': [Object],\n      type: [Object],\n      description: [Object],\n      yes: [Object],\n      open: [Object],\n      id: [Object],\n      pkg: [Object],\n      git: [Object]\n    },\n    _arguments: [ [Object] ],\n    _prompts: [],\n    _namespace: 'norgate-av:app',\n    _namespaceId: YeomanNamespace {\n      _original: 'norgate-av:app',\n      scope: undefined,\n      unscoped: 'norgate-av',\n      generator: 'app',\n      instanceId: undefined,\n      semver: undefined,\n      methods: undefined,\n      flags: undefined,\n      command: undefined\n    },\n    _customPriorities: undefined,\n    resolved: '/Users/damienbutt/Projects/generator-norgate-av/generators/app/index.js',\n    description: 'Generates project boilerplates of various types ready for development.',\n    contextRoot: '/private/var/folders/50/ktqwyw4s2f9_2sln4gvh7d5c0000gn/T/28419000a153d94a1022b9d83bb7be3ee7215e88',\n    _debug: [Function: debug] {\n      namespace: 'norgate-av:app',\n      useColors: true,\n      color: 81,\n      extend: [Function: extend],\n      destroy: [Function: deprecated],\n      enabled: [Getter/Setter],\n      inspectOpts: {}\n    },\n    env: <ref *1> FullEnvironment {\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: 100,\n      cwd: '/private/var/folders/50/ktqwyw4s2f9_2sln4gvh7d5c0000gn/T/28419000a153d94a1022b9d83bb7be3ee7215e88',\n      logCwd: '/private/var/folders/50/ktqwyw4s2f9_2sln4gvh7d5c0000gn/T/28419000a153d94a1022b9d83bb7be3ee7215e88',\n      adapter: [TestAdapter],\n      sharedFs: [Store],\n      conflicterOptions: [Object],\n      options: [Object],\n      aliases: [Array],\n      store: [Store],\n      command: undefined,\n      runLoop: [Queue],\n      composedStore: [ComposedStore],\n      lookups: [Array],\n      sharedOptions: [Object],\n      repository: [FlyRepository],\n      experimental: false,\n      _rootGenerator: [Circular *2],\n      compatibilityMode: false,\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false\n    },\n    fs: MemFsEditor { store: [Store] },\n    log: [Function (anonymous)] {\n      _events: undefined,\n      _eventsCount: 0,\n      _maxListeners: undefined,\n      setMaxListeners: [Function: setMaxListeners],\n      getMaxListeners: [Function: getMaxListeners],\n      emit: [Function: emit],\n      addListener: [Function: addListener],\n      on: [Function: addListener],\n      prependListener: [Function: prependListener],\n      once: [Function: once],\n      prependOnceListener: [Function: prependOnceListener],\n      removeListener: [Function: removeListener],\n      off: [Function: removeListener],\n      removeAllListeners: [Function: removeAllListeners],\n      listeners: [Function: listeners],\n      rawListeners: [Function: rawListeners],\n      listenerCount: [Function: listenerCount],\n      eventNames: [Function: eventNames],\n      write: [Function: functionStub],\n      writeln: [Function: functionStub],\n      ok: [Function: functionStub],\n      error: [Function: functionStub],\n      skip: [Function: functionStub],\n      force: [Function: functionStub],\n      create: [Function: functionStub],\n      conflict: [Function: functionStub],\n      identical: [Function: functionStub],\n      info: [Function: functionStub],\n      added: [Function: functionStub],\n      removed: [Function: functionStub],\n      table: [Function: functionStub],\n      colored: [Function: functionStub]\n    },\n    _: [Module: null prototype] {\n      add: [Function (anonymous)],\n      after: [Function: after],\n      ary: [Function: ary],\n      assign: [Function (anonymous)],\n      assignIn: [Function (anonymous)],\n      assignInWith: [Function (anonymous)],\n      assignWith: [Function (anonymous)],\n      at: [Function (anonymous)],\n      attempt: [Function (anonymous)],\n      before: [Function: before],\n      bind: [Function],\n      bindAll: [Function (anonymous)],\n      bindKey: [Function],\n      camelCase: [Function (anonymous)],\n      capitalize: [Function: capitalize],\n      castArray: [Function: castArray],\n      ceil: [Function (anonymous)],\n      chain: [Function: chain],\n      chunk: [Function: chunk],\n      clamp: [Function: clamp],\n      clone: [Function: clone],\n      cloneDeep: [Function: cloneDeep],\n      cloneDeepWith: [Function: cloneDeepWith],\n      cloneWith: [Function: cloneWith],\n      commit: [Function: wrapperCommit],\n      compact: [Function: compact],\n      concat: [Function: concat],\n      cond: [Function: cond],\n      conforms: [Function: conforms],\n      conformsTo: [Function: conformsTo],\n      constant: [Function: constant],\n      countBy: [Function (anonymous)],\n      create: [Function: create],\n      curry: [Function],\n      curryRight: [Function],\n      debounce: [Function: debounce],\n      deburr: [Function: deburr],\n      default: [Function],\n      defaultTo: [Function: defaultTo],\n      defaults: [Function (anonymous)],\n      defaultsDeep: [Function (anonymous)],\n      defer: [Function (anonymous)],\n      delay: [Function (anonymous)],\n      difference: [Function (anonymous)],\n      differenceBy: [Function (anonymous)],\n      differenceWith: [Function (anonymous)],\n      divide: [Function (anonymous)],\n      drop: [Function: drop],\n      dropRight: [Function: dropRight],\n      dropRightWhile: [Function: dropRightWhile],\n      dropWhile: [Function: dropWhile],\n      each: [Function: forEach],\n      eachRight: [Function: forEachRight],\n      endsWith: [Function: endsWith],\n      entries: [Function (anonymous)],\n      entriesIn: [Function (anonymous)],\n      eq: [Function: eq],\n      escape: [Function: escape],\n      escapeRegExp: [Function: escapeRegExp],\n      every: [Function: every],\n      extend: [Function (anonymous)],\n      extendWith: [Function (anonymous)],\n      fill: [Function: fill],\n      filter: [Function: filter],\n      find: [Function (anonymous)],\n      findIndex: [Function: findIndex],\n      findKey: [Function: findKey],\n      findLast: [Function (anonymous)],\n      findLastIndex: [Function: findLastIndex],\n      findLastKey: [Function: findLastKey],\n      first: [Function: head],\n      flatMap: [Function: flatMap],\n      flatMapDeep: [Function: flatMapDeep],\n      flatMapDepth: [Function: flatMapDepth],\n      flatten: [Function: flatten],\n      flattenDeep: [Function: flattenDeep],\n      flattenDepth: [Function: flattenDepth],\n      flip: [Function: flip],\n      floor: [Function (anonymous)],\n      flow: [Function (anonymous)],\n      flowRight: [Function (anonymous)],\n      forEach: [Function: forEach],\n      forEachRight: [Function: forEachRight],\n      forIn: [Function: forIn],\n      forInRight: [Function: forInRight],\n      forOwn: [Function: forOwn],\n      forOwnRight: [Function: forOwnRight],\n      fromPairs: [Function: fromPairs],\n      functions: [Function: functions],\n      functionsIn: [Function: functionsIn],\n      get: [Function: get],\n      groupBy: [Function (anonymous)],\n      gt: [Function (anonymous)],\n      gte: [Function (anonymous)],\n      has: [Function: has],\n      hasIn: [Function: hasIn],\n      head: [Function: head],\n      identity: [Function: identity],\n      inRange: [Function: inRange],\n      includes: [Function: includes],\n      indexOf: [Function: indexOf],\n      initial: [Function: initial],\n      intersection: [Function (anonymous)],\n      intersectionBy: [Function (anonymous)],\n      intersectionWith: [Function (anonymous)],\n      invert: [Function (anonymous)],\n      invertBy: [Function (anonymous)],\n      invoke: [Function (anonymous)],\n      invokeMap: [Function (anonymous)],\n      isArguments: [Function: baseIsArguments],\n      isArray: [Function: isArray],\n      isArrayBuffer: [Function: baseIsArrayBuffer],\n      isArrayLike: [Function: isArrayLike],\n      isArrayLikeObject: [Function: isArrayLikeObject],\n      isBoolean: [Function: isBoolean],\n      isBuffer: [Function: stubFalse],\n      isDate: [Function: baseIsDate],\n      isElement: [Function: isElement],\n      isEmpty: [Function: isEmpty],\n      isEqual: [Function: isEqual],\n      isEqualWith: [Function: isEqualWith],\n      isError: [Function: isError],\n      isFinite: [Function: isFinite],\n      isFunction: [Function: isFunction],\n      isInteger: [Function: isInteger],\n      isLength: [Function: isLength],\n      isMap: [Function: baseIsMap],\n      isMatch: [Function: isMatch],\n      isMatchWith: [Function: isMatchWith],\n      isNaN: [Function: isNaN],\n      isNative: [Function: isNative],\n      isNil: [Function: isNil],\n      isNull: [Function: isNull],\n      isNumber: [Function: isNumber],\n      isObject: [Function: isObject],\n      isObjectLike: [Function: isObjectLike],\n      isPlainObject: [Function: isPlainObject],\n      isRegExp: [Function: baseIsRegExp],\n      isSafeInteger: [Function: isSafeInteger],\n      isSet: [Function: baseIsSet],\n      isString: [Function: isString],\n      isSymbol: [Function: isSymbol],\n      isTypedArray: [Function: baseIsTypedArray],\n      isUndefined: [Function: isUndefined],\n      isWeakMap: [Function: isWeakMap],\n      isWeakSet: [Function: isWeakSet],\n      iteratee: [Function: iteratee],\n      join: [Function: join],\n      kebabCase: [Function (anonymous)],\n      keyBy: [Function (anonymous)],\n      keys: [Function: keys],\n      keysIn: [Function: keysIn],\n      last: [Function: last],\n      lastIndexOf: [Function: lastIndexOf],\n      lodash: [Function],\n      lowerCase: [Function (anonymous)],\n      lowerFirst: [Function (anonymous)],\n      lt: [Function (anonymous)],\n      lte: [Function (anonymous)],\n      map: [Function: map],\n      mapKeys: [Function: mapKeys],\n      mapValues: [Function: mapValues],\n      matches: [Function: matches],\n      matchesProperty: [Function: matchesProperty],\n      max: [Function: max],\n      maxBy: [Function: maxBy],\n      mean: [Function: mean],\n      meanBy: [Function: meanBy],\n      memoize: [Function],\n      merge: [Function (anonymous)],\n      mergeWith: [Function (anonymous)],\n      method: [Function (anonymous)],\n      methodOf: [Function (anonymous)],\n      min: [Function: min],\n      minBy: [Function: minBy],\n      mixin: [Function: mixin],\n      multiply: [Function (anonymous)],\n      negate: [Function: negate],\n      next: [Function: wrapperNext],\n      noop: [Function: noop],\n      now: [Function: now],\n      nth: [Function: nth],\n      nthArg: [Function: nthArg],\n      omit: [Function (anonymous)],\n      omitBy: [Function: omitBy],\n      once: [Function: once],\n      orderBy: [Function: orderBy],\n      over: [Function (anonymous)],\n      overArgs: [Function (anonymous)],\n      overEvery: [Function (anonymous)],\n      overSome: [Function (anonymous)],\n      pad: [Function: pad],\n      padEnd: [Function: padEnd],\n      padStart: [Function: padStart],\n      parseInt: [Function: parseInt],\n      partial: [Function],\n      partialRight: [Function],\n      partition: [Function (anonymous)],\n      pick: [Function (anonymous)],\n      pickBy: [Function: pickBy],\n      plant: [Function: wrapperPlant],\n      property: [Function: property],\n      propertyOf: [Function: propertyOf],\n      pull: [Function (anonymous)],\n      pullAll: [Function: pullAll],\n      pullAllBy: [Function: pullAllBy],\n      pullAllWith: [Function: pullAllWith],\n      pullAt: [Function (anonymous)],\n      random: [Function: random],\n      range: [Function (anonymous)],\n      rangeRight: [Function (anonymous)],\n      rearg: [Function (anonymous)],\n      reduce: [Function: reduce],\n      reduceRight: [Function: reduceRight],\n      reject: [Function: reject],\n      remove: [Function: remove],\n      repeat: [Function: repeat],\n      replace: [Function: replace],\n      rest: [Function: rest],\n      result: [Function: result],\n      reverse: [Function: reverse],\n      round: [Function (anonymous)],\n      sample: [Function: sample],\n      sampleSize: [Function: sampleSize],\n      set: [Function: set],\n      setWith: [Function: setWith],\n      shuffle: [Function: shuffle],\n      size: [Function: size],\n      slice: [Function: slice],\n      snakeCase: [Function (anonymous)],\n      some: [Function: some],\n      sortBy: [Function (anonymous)],\n      sortedIndex: [Function: sortedIndex],\n      sortedIndexBy: [Function: sortedIndexBy],\n      sortedIndexOf: [Function: sortedIndexOf],\n      sortedLastIndex: [Function: sortedLastIndex],\n      sortedLastIndexBy: [Function: sortedLastIndexBy],\n      sortedLastIndexOf: [Function: sortedLastIndexOf],\n      sortedUniq: [Function: sortedUniq],\n      sortedUniqBy: [Function: sortedUniqBy],\n      split: [Function: split],\n      spread: [Function: spread],\n      startCase: [Function (anonymous)],\n      startsWith: [Function: startsWith],\n      stubArray: [Function: stubArray],\n      stubFalse: [Function: stubFalse],\n      stubObject: [Function: stubObject],\n      stubString: [Function: stubString],\n      stubTrue: [Function: stubTrue],\n      subtract: [Function (anonymous)],\n      sum: [Function: sum],\n      sumBy: [Function: sumBy],\n      tail: [Function: tail],\n      take: [Function: take],\n      takeRight: [Function: takeRight],\n      takeRightWhile: [Function: takeRightWhile],\n      takeWhile: [Function: takeWhile],\n      tap: [Function: tap],\n      template: [Function: template],\n      templateSettings: [Object],\n      throttle: [Function: throttle],\n      thru: [Function: thru],\n      times: [Function: times],\n      toArray: [Function: toArray],\n      toFinite: [Function: toFinite],\n      toInteger: [Function: toInteger],\n      toIterator: [Function: wrapperToIterator],\n      toJSON: [Function: wrapperValue],\n      toLength: [Function: toLength],\n      toLower: [Function: toLower],\n      toNumber: [Function: toNumber],\n      toPairs: [Function (anonymous)],\n      toPairsIn: [Function (anonymous)],\n      toPath: [Function: toPath],\n      toPlainObject: [Function: toPlainObject],\n      toSafeInteger: [Function: toSafeInteger],\n      toString: [Function: toString],\n      toUpper: [Function: toUpper],\n      transform: [Function: transform],\n      trim: [Function: trim],\n      trimEnd: [Function: trimEnd],\n      trimStart: [Function: trimStart],\n      truncate: [Function: truncate],\n      unary: [Function: unary],\n      unescape: [Function: unescape],\n      union: [Function (anonymous)],\n      unionBy: [Function (anonymous)],\n      unionWith: [Function (anonymous)],\n      uniq: [Function: uniq],\n      uniqBy: [Function: uniqBy],\n      uniqWith: [Function: uniqWith],\n      uniqueId: [Function: uniqueId],\n      unset: [Function: unset],\n      unzip: [Function: unzip],\n      unzipWith: [Function: unzipWith],\n      update: [Function: update],\n      updateWith: [Function: updateWith],\n      upperCase: [Function (anonymous)],\n      upperFirst: [Function (anonymous)],\n      value: [Function: wrapperValue],\n      valueOf: [Function: wrapperValue],\n      values: [Function: values],\n      valuesIn: [Function: valuesIn],\n      without: [Function (anonymous)],\n      words: [Function: words],\n      wrap: [Function: wrap],\n      wrapperAt: [Function (anonymous)],\n      wrapperChain: [Function: wrapperChain],\n      wrapperCommit: [Function: wrapperCommit],\n      wrapperLodash: [Function],\n      wrapperNext: [Function: wrapperNext],\n      wrapperPlant: [Function: wrapperPlant],\n      wrapperReverse: [Function: wrapperReverse],\n      wrapperToIterator: [Function: wrapperToIterator],\n      wrapperValue: [Function: wrapperValue],\n      xor: [Function (anonymous)],\n      xorBy: [Function (anonymous)],\n      xorWith: [Function (anonymous)],\n      zip: [Function (anonymous)],\n      zipObject: [Function: zipObject],\n      zipObjectDeep: [Function: zipObjectDeep],\n      zipWith: [Function (anonymous)]\n    },\n    appname: 'Norgate AV Project Generator',\n    args: [],\n    arguments: [],\n    _destinationRoot: '/private/var/folders/50/ktqwyw4s2f9_2sln4gvh7d5c0000gn/T/28419000a153d94a1022b9d83bb7be3ee7215e88/generator-temp',\n    _sourceRoot: '/Users/damienbutt/Projects/generator-norgate-av/generators/app/templates',\n    generatorConfig: Storage {\n      path: '/private/var/folders/50/ktqwyw4s2f9_2sln4gvh7d5c0000gn/T/28419000a153d94a1022b9d83bb7be3ee7215e88/.yo-rc.json',\n      name: 'generator-norgate-av.:app',\n      fs: [MemFsEditor],\n      indent: 2,\n      lodashPath: true,\n      disableCache: false,\n      disableCacheByFile: false,\n      sorted: false,\n      existed: false,\n      _cachedStore: {}\n    },\n    instanceConfig: undefined,\n    _config: undefined,\n    _packageJson: undefined,\n    _globalConfig: Storage {\n      path: '/private/var/folders/50/ktqwyw4s2f9_2sln4gvh7d5c0000gn/T/28419000a153d94a1022b9d83bb7be3ee7215e88/.yo-rc-global.json',\n      name: 'generator-norgate-av:2.0.11',\n      fs: [MemFsEditor],\n      indent: 2,\n      lodashPath: false,\n      disableCache: false,\n      disableCacheByFile: false,\n      sorted: false,\n      existed: false,\n      _cachedStore: {}\n    },\n    _running: true,\n    features: { skipParseOptions: undefined, customPriorities: undefined },\n    yoGeneratorVersion: '7.1.1',\n    _simpleGit: undefined,\n    _queues: {\n      initializing: [Object],\n      prompting: [Object],\n      configuring: [Object],\n      default: [Object],\n      writing: [Object],\n      transform: [Object],\n      conflicts: [Object],\n      install: [Object],\n      end: [Object]\n    },\n    generator: t {\n      generator: [Circular *2],\n      name: 'Node.js (TypeScript)',\n      questions: [Array]\n    },\n    choices: [\n      [Object], [Object],\n      [Object], [Object],\n      [Object], [Object],\n      [Object]\n    ],\n    abort: true,\n    _meta: {\n      namespace: 'norgate-av:app',\n      resolved: '/Users/damienbutt/Projects/generator-norgate-av/generators/app/index.js',\n      packagePath: undefined,\n      importGenerator: [AsyncFunction: importGenerator],\n      importModule: [AsyncFunction: importModule],\n      instantiate: [AsyncFunction: instantiate],\n      instantiateHelp: [AsyncFunction: instantiateHelp],\n      packageNamespace: 'norgate-av'\n    },\n    _environmentOptions: {\n      newErrorHandler: true,\n      force: true,\n      skipCache: true,\n      skipInstall: true,\n      localConfigOnly: true,\n      sharedData: {},\n      forwardErrorToEnvironment: false,\n      skipLocalCache: true,\n      env: [FullEnvironment],\n      resolved: '/Users/damienbutt/Projects/generator-norgate-av/generators/app/index.js',\n      namespace: 'norgate-av:app'\n    },\n    _taskStatus: { cancelled: false, timestamp: 2024-02-08T21:44:10.601Z },\n    [Symbol(shapeMode)]: false,\n    [Symbol(kCapture)]: false\n  },\n  cwd: '/private/var/folders/50/ktqwyw4s2f9_2sln4gvh7d5c0000gn/T/28419000a153d94a1022b9d83bb7be3ee7215e88',\n  oldCwd: '/Users/damienbutt/Projects/generator-norgate-av',\n  memFs: Store {\n    _events: [Object: null prototype] { change: [Array] },\n    _eventsCount: 1,\n    _maxListeners: 0,\n    loadFile: [Function: loadFile],\n    store: Map(3) {\n      '/private/var/folders/50/ktqwyw4s2f9_2sln4gvh7d5c0000gn/T/28419000a153d94a1022b9d83bb7be3ee7215e88/package.json' => <File \"package.json\">,\n      '/private/var/folders/50/ktqwyw4s2f9_2sln4gvh7d5c0000gn/T/28419000a153d94a1022b9d83bb7be3ee7215e88/.yo-rc.json' => <File \".yo-rc.json\">,\n      '/private/var/folders/50/ktqwyw4s2f9_2sln4gvh7d5c0000gn/T/28419000a153d94a1022b9d83bb7be3ee7215e88/.yo-rc-global.json' => <File \".yo-rc-global.json\">\n    },\n    [Symbol(shapeMode)]: false,\n    [Symbol(kCapture)]: false\n  },\n  fs: MemFsEditor {\n    store: Store {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: 0,\n      loadFile: [Function: loadFile],\n      store: [Map],\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false\n    }\n  },\n  mockedGenerators: {},\n  options: {\n    env: <ref *1> FullEnvironment {\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: 100,\n      cwd: '/private/var/folders/50/ktqwyw4s2f9_2sln4gvh7d5c0000gn/T/28419000a153d94a1022b9d83bb7be3ee7215e88',\n      logCwd: '/private/var/folders/50/ktqwyw4s2f9_2sln4gvh7d5c0000gn/T/28419000a153d94a1022b9d83bb7be3ee7215e88',\n      adapter: [TestAdapter],\n      sharedFs: [Store],\n      conflicterOptions: [Object],\n      options: [Object],\n      aliases: [Array],\n      store: [Store],\n      command: undefined,\n      runLoop: [Queue],\n      composedStore: [ComposedStore],\n      lookups: [Array],\n      sharedOptions: [Object],\n      repository: [FlyRepository],\n      experimental: false,\n      _rootGenerator: [G],\n      compatibilityMode: false,\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false\n    },\n    generator: <ref *2> G {\n      _events: [Object: null prototype] {},\n      _eventsCount: 0,\n      _maxListeners: undefined,\n      options: [Object],\n      _initOptions: [Object],\n      _args: [],\n      _options: [Object],\n      _arguments: [Array],\n      _prompts: [],\n      _namespace: 'norgate-av:app',\n      _namespaceId: [YeomanNamespace],\n      _customPriorities: undefined,\n      resolved: '/Users/damienbutt/Projects/generator-norgate-av/generators/app/index.js',\n      description: 'Generates project boilerplates of various types ready for development.',\n      contextRoot: '/private/var/folders/50/ktqwyw4s2f9_2sln4gvh7d5c0000gn/T/28419000a153d94a1022b9d83bb7be3ee7215e88',\n      _debug: [Function],\n      env: [FullEnvironment],\n      fs: [MemFsEditor],\n      log: [Function],\n      _: [Object: null prototype] [Module],\n      appname: 'Norgate AV Project Generator',\n      args: [],\n      arguments: [],\n      _destinationRoot: '/private/var/folders/50/ktqwyw4s2f9_2sln4gvh7d5c0000gn/T/28419000a153d94a1022b9d83bb7be3ee7215e88/generator-temp',\n      _sourceRoot: '/Users/damienbutt/Projects/generator-norgate-av/generators/app/templates',\n      generatorConfig: [Storage],\n      instanceConfig: undefined,\n      _config: undefined,\n      _packageJson: undefined,\n      _globalConfig: [Storage],\n      _running: true,\n      features: [Object],\n      yoGeneratorVersion: '7.1.1',\n      _simpleGit: undefined,\n      _queues: [Object],\n      generator: [t],\n      choices: [Array],\n      abort: true,\n      _meta: [Object],\n      _environmentOptions: [Object],\n      _taskStatus: [Object],\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false\n    },\n    memFs: Store {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: 0,\n      loadFile: [Function: loadFile],\n      store: [Map],\n      [Symbol(shapeMode)]: false,\n      [Symbol(kCapture)]: false\n    },\n    settings: { tmpdir: true },\n    spawnStub: undefined,\n    oldCwd: '/Users/damienbutt/Projects/generator-norgate-av',\n    cwd: '/private/var/folders/50/ktqwyw4s2f9_2sln4gvh7d5c0000gn/T/28419000a153d94a1022b9d83bb7be3ee7215e88',\n    envOptions: {},\n    mockedGenerators: {},\n    helpers: YeomanTest {\n      settings: undefined,\n      environmentOptions: undefined,\n      generatorOptions: undefined,\n      adapterOptions: undefined\n    }\n  },\n  spawnStub: undefined\n}"
